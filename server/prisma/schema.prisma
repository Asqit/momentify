// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  email          String    @unique
  username       String    @unique
  hashPassword   String
  description    String?
  profilePicture String?
  verified       Boolean   @default(false)
  followers      User[]    @relation("UserFollows", fields: [followersIds], references: [id])
  followersIds   String[]  @db.ObjectId
  following      User[]    @relation("UserFollows", fields: [followingIds], references: [id])
  followingIds   String[]  @db.ObjectId
  posts          Post[]    @relation("author")
  comments       Comment[]

  @@map("users")
}

model Post {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  likedBy   String[]  @db.ObjectId
  author    User      @relation("author", fields: [authorId], references: [id])
  authorId  String    @db.ObjectId
  body      String[] // Array of URLs to Post images
  createdAt DateTime  @default(now())
  comments  Comment[]

  @@map("posts")
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime? 
  value     String
  likedBy   String[]  @db.ObjectId
  authorId  String   @db.ObjectId
  author    User     @relation(fields: [authorId], references: [id])
  postId    String   @db.ObjectId
  post      Post     @relation(fields: [postId], references: [id])

  @@map("comments")
}
